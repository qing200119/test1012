package day09;

/*抽象方法
* 派生类方法不一样，为抽象方法，由abstract修饰，没有具体实现方法
*没有{}，不完整
* 包含抽象方法的类一定是抽象类
*普通类可用重写，也可不写
* 抽象类一定要重写。
*
* 抽象类abstract，抽象类不能被实例化
* 抽象类不能单独存在，一定要继承，派生的
* 重写抽象方法，变不完整为完整
* 派生类重写抽象方法
*
* 超类的step 有什么意义-----强制重写
* 超类在有step ，则在向上造型中通过超类的引用可以点出step
* 但是派生类都要重写（造型通过超类能点出来）
*
*抽象类
* 1）封装行为和属性
* 2）给所用派生类提供统一类型----向上造型
* 3）派生类的具体实现方法不同，但是入口是一致
*
*
*
*
*
* */
public class abstruct {
}
